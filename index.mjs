/// <reference types="./index.d.ts" />
import e from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-property@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-nonenumerable-read-only-property@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/number-float64-base-to-float32@esm/index.mjs";var n=function(){var e=""+this.re;return this.im<0?e+=" - "+-this.im:e+=" + "+this.im,e+="i"};var o=function(){var e={type:"Complex64"};return e.re=this.re,e.im=this.im,e},s=e.isPrimitive,m=t,a=r,l=i,p=n,u=o;function d(e,t){if(!(this instanceof d))throw new TypeError("invalid invocation. Constructor must be called with the `new` keyword.");if(!s(e))throw new TypeError("invalid argument. Real component must be a number primitive. Value: `"+e+"`.");if(!s(t))throw new TypeError("invalid argument. Imaginary component must be a number primitive. Value: `"+t+"`.");return m(this,"re",{configurable:!1,enumerable:!0,writable:!1,value:l(e)}),m(this,"im",{configurable:!1,enumerable:!0,writable:!1,value:l(t)}),this}a(d,"BYTES_PER_ELEMENT",4),a(d.prototype,"BYTES_PER_ELEMENT",4),a(d.prototype,"byteLength",8),a(d.prototype,"toString",p),a(d.prototype,"toJSON",u);var h=d;export{h as default};
//# sourceMappingURL=index.mjs.map
